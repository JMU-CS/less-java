listOperator() {
    list = ["a", "b", "c"]
    list.add("d")

    return list
}

test listOperator().size() == 4
test listOperator().get(0) == "a"
test listOperator().get(listOperator().size() - 1) == "d"

emptyListConstructor() {
    list = List()
    list.add("a")

    return list
}

test emptyListConstructor().size() == 1
test emptyListConstructor().get(0) == "a"
test emptyListConstructor().get(emptyListConstructor().size() - 1) == "a"

listFromList() {
    list = List(listOperator())
    list.add("e")

    return list
}

test listFromList().size() == 5
test listFromList().get(0) == "a"
test listFromList().get(listFromList().size() - 1) == "e"

listFromSet() {
    list = List(setOperator())
    list.add("a")

    return list
}

test listFromSet().size() == 5

setOperator() {
    set = {"a", "a", "b", "c"}
    set.add("d")
    set.add("e")
    set.remove("e")

    return set
}

test setOperator().size() == 4
test setOperator().contains("a")
test !setOperator().contains("e")

emptySetConstructor() {
    set = Set()
    set.add("a")
    set.add("a")
    set.add("b")
    set.add("c")
    set.remove("c")

    return set
}

test emptySetConstructor().size() == 2
test emptySetConstructor().contains("a")
test emptySetConstructor().contains("b")
test !emptySetConstructor().contains("c")

setFromSet() {
    set = Set(setOperator())
    set.remove("d")

    return set
}

test setFromSet().size() == 3
test !setFromSet().contains("d")

setFromList() {
    set = Set(listFromSet())

    return set
}

test setFromList().size() == 4

mapOperator() {
    map = <"x" : 10>
    map.put("y", 100)

    return map
}

test mapOperator().contains("x")
test mapOperator().contains("y")
test mapOperator().get("x") == 10
test mapOperator().get("y") == 100

emptyMapConstructor() {
    map = Map()
    map.put("x", 10)

    return map
}

test emptyMapConstructor().size() == 1
test emptyMapConstructor().contains("x")
test emptyMapConstructor().get("x") == 10

listAsQueue() {
    queue = ["a", "b", "c"]
    queue.enqueue("d")

    return queue
}

test listAsQueue().size() == 4
test listAsQueue().get(listAsQueue().size() - 1) == "d"
